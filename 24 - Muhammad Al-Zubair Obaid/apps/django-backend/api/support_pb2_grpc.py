# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import support_pb2 as support__pb2


class SupportServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InstallApps = channel.unary_stream(
                '/LaptopSupport.SupportService/InstallApps',
                request_serializer=support__pb2.InstallAppsRequest.SerializeToString,
                response_deserializer=support__pb2.ProgressUpdate.FromString,
                )
        self.QuerySystemInfo = channel.unary_unary(
                '/LaptopSupport.SupportService/QuerySystemInfo',
                request_serializer=support__pb2.QuerySystemInfoRequest.SerializeToString,
                response_deserializer=support__pb2.SystemInfoResponse.FromString,
                )
        self.InstallEnvironment = channel.unary_stream(
                '/LaptopSupport.SupportService/InstallEnvironment',
                request_serializer=support__pb2.InstallEnvironmentRequest.SerializeToString,
                response_deserializer=support__pb2.ProgressUpdate.FromString,
                )


class SupportServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def InstallApps(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QuerySystemInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InstallEnvironment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SupportServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InstallApps': grpc.unary_stream_rpc_method_handler(
                    servicer.InstallApps,
                    request_deserializer=support__pb2.InstallAppsRequest.FromString,
                    response_serializer=support__pb2.ProgressUpdate.SerializeToString,
            ),
            'QuerySystemInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.QuerySystemInfo,
                    request_deserializer=support__pb2.QuerySystemInfoRequest.FromString,
                    response_serializer=support__pb2.SystemInfoResponse.SerializeToString,
            ),
            'InstallEnvironment': grpc.unary_stream_rpc_method_handler(
                    servicer.InstallEnvironment,
                    request_deserializer=support__pb2.InstallEnvironmentRequest.FromString,
                    response_serializer=support__pb2.ProgressUpdate.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'LaptopSupport.SupportService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SupportService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def InstallApps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/LaptopSupport.SupportService/InstallApps',
            support__pb2.InstallAppsRequest.SerializeToString,
            support__pb2.ProgressUpdate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QuerySystemInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/LaptopSupport.SupportService/QuerySystemInfo',
            support__pb2.QuerySystemInfoRequest.SerializeToString,
            support__pb2.SystemInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InstallEnvironment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/LaptopSupport.SupportService/InstallEnvironment',
            support__pb2.InstallEnvironmentRequest.SerializeToString,
            support__pb2.ProgressUpdate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class AdminServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RunCommand = channel.unary_unary(
                '/LaptopSupport.AdminService/RunCommand',
                request_serializer=support__pb2.RunCommandRequest.SerializeToString,
                response_deserializer=support__pb2.RunCommandResponse.FromString,
                )


class AdminServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RunCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RunCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.RunCommand,
                    request_deserializer=support__pb2.RunCommandRequest.FromString,
                    response_serializer=support__pb2.RunCommandResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'LaptopSupport.AdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AdminService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RunCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/LaptopSupport.AdminService/RunCommand',
            support__pb2.RunCommandRequest.SerializeToString,
            support__pb2.RunCommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
